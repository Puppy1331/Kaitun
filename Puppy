-- SendToWebsite.lua — Gửi dữ liệu account/seeds/godly/age lên website
-- ⛳ Chỉnh URL ở dưới: WEBHOOK_URL

local _wait = task.wait
repeat _wait() until game:IsLoaded()

local Players          = game:GetService("Players")
local Player           = Players.LocalPlayer
local HttpService      = game:GetService("HttpService")
local ReplicatedStorage= game:GetService("ReplicatedStorage")

-- === Lấy module dữ liệu trong game (tuỳ hệ thống game của bạn) ===
local logicRoot  = Player:WaitForChild("PlayerGui"):WaitForChild("LogicHolder")
local modulesDir = logicRoot:WaitForChild("ClientLoader"):WaitForChild("Modules")
local ClientDataHandler = require(modulesDir:WaitForChild("ClientDataHandler"))

-- ======================
-- Cấu hình
-- ======================
local WEBHOOK_URL  = "https://accountgiare.info.vn/webhook.php?action=ingest" -- ← đổi sang domain thật
local REPORT_EVERY = 60   -- giây, chu kỳ gửi
local SAFE_NUMBER  = 0

-- ======================
-- Helpers
-- ======================

-- Chuẩn hoá số seeds kiểu "7.2k" / "1,234" → number
local function ParseNumber(str)
    local s = tostring(str or ""):gsub(",", "")
    local multipliers = { k = 1e3, m = 1e6, b = 1e9, t = 1e12 }
    local number, suffix = s:lower():match("([%d%.]+)([kmbt]?)")
    local n = tonumber(number)
    if not n then return SAFE_NUMBER end
    return n * (multipliers[suffix] or 1)
end

-- Đếm số unit godly trong inventory
local function CountGodlyUnits()
    local inv = ClientDataHandler.GetValue("Inventory") or {}
    local count = 0
    for _, unit in pairs(inv) do
        local itemId = unit.ItemData and unit.ItemData.ID
        if itemId then
            local cfgModule = Player.PlayerGui.LogicHolder.ClientLoader.SharedConfig.ItemData.Units.Configs:FindFirstChild(itemId)
            if cfgModule then
                local ok, cfg = pcall(require, cfgModule)
                if ok and cfg and cfg.Rarity == "ra_godly" then
                    count += 1
                end
            end
        end
    end
    return count
end

-- Gửi JSON qua nhiều API request khác nhau (syn.request / request / http_request)
local function HttpPostJson(url, tbl)
    local body = HttpService:JSONEncode(tbl)
    local headers = { ["Content-Type"] = "application/json" }

    -- Synapse X
    if syn and syn.request then
        return syn.request({ Url = url, Method = "POST", Headers = headers, Body = body })
    end
    -- Script-Ware / Krnl / Fluxus (tuỳ executor)
    if request then
        return request({ Url = url, Method = "POST", Headers = headers, Body = body })
    end
    if http_request then
        return http_request({ Url = url, Method = "POST", Headers = headers, Body = body })
    end

    -- Fallback: Roblox HttpService (thường bị chặn trong game public)
    -- pcall(function() HttpService:PostAsync(url, body, Enum.HttpContentType.ApplicationJson) end)
    return nil, "No HTTP request function available"
end

-- Thu thập dữ liệu & gửi
local function ReportOnce()
    -- Lấy Seeds dạng text & số
    local seedsTxt = tostring((Player:FindFirstChild("leaderstats") and Player.leaderstats:FindFirstChild("Seeds") and Player.leaderstats.Seeds.Value) or 0)
    local seedsNum = ParseNumber(seedsTxt)

    -- Tạo payload
    local data = {
        account_name = Players.LocalPlayer.Name,
        user_id      = Players.LocalPlayer.UserId,
        age_days     = Players.LocalPlayer.AccountAge,
        seeds_txt    = seedsTxt,
        seeds_num    = seedsNum,
        godly_count  = CountGodlyUnits(),
        place_id     = game.PlaceId,
        job_id       = game.JobId
    }

    -- Gửi
    local ok, err = pcall(function()
        local resp = HttpPostJson(WEBHOOK_URL, data)
        -- Tuỳ executor, resp có thể là table {StatusCode, Body, Success...}
        if typeof(resp) == "table" and resp.StatusCode and resp.StatusCode >= 400 then
            warn("[Webhook] HTTP ".. tostring(resp.StatusCode) .." | Body: ".. tostring(resp.Body))
        end
    end)
    if not ok then
        warn("[Webhook] Send error: ", err)
    end
end

-- ======================
-- Loop gửi theo chu kỳ
-- ======================
task.spawn(function()
    while true do
        ReportOnce()
        _wait(REPORT_EVERY)
    end
end)
