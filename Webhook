local _wait = task.wait
repeat
    _wait()
until game:IsLoaded()

task.wait(10)
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local logicRoot = player:WaitForChild("PlayerGui"):WaitForChild("LogicHolder")
local modulesDir = logicRoot:WaitForChild("ClientLoader"):WaitForChild("Modules")
local ClientDataHandler = require(modulesDir:WaitForChild("ClientDataHandler"))
local SharedItemData = require(modulesDir:WaitForChild("SharedItemData"))

local function trackwebsite()
    while true do
        print("track")
        local success, errorMessage =
            pcall(
            function()
                local inventory = ClientDataHandler.GetValue("Inventory")
                local Players = game:GetService("Players")
                local Player = Players.LocalPlayer
                local Seeds = tostring(game:GetService("Players").LocalPlayer.leaderstats.Seeds.Value)
                local SeedHave =
                    tonumber(
                    tostring(Player.leaderstats.Seeds.Value):match("[kK]") and
                        tostring(Player.leaderstats.Seeds.Value):gsub("[kK]", "") * 1000 or
                        tostring(Player.leaderstats.Seeds.Value):match("[mM]") and
                            tostring(Player.leaderstats.Seeds.Value):gsub("[mM]", "") * 1000000 or
                        tostring(Player.leaderstats.Seeds.Value):match("[bB]") and
                            tostring(Player.leaderstats.Seeds.Value):gsub("[bB]", "") * 1000000000 or
                        tostring(Player.leaderstats.Seeds.Value):gsub(",", "")
                )
                local List = {}
                for uniqueId, unitData in pairs(inventory or {}) do
                    local itemId = unitData.ItemData and unitData.ItemData.ID
                    local rarity =
                        require(
                        game:GetService("Players").LocalPlayer.PlayerGui.LogicHolder.ClientLoader.SharedConfig.ItemData.Units.Configs:FindFirstChild(
                            itemId
                        )
                    )

                    print(itemId, rarity.Rarity)
                    if
                        (rarity.Rarity == "ra_godly" or rarity.Rarity == "ra_exclusive") and
                            itemId ~= "unit_fire_flower" and
                            itemId ~= "unit_banana"
                     then
                        table.insert(List, itemId)
                    end
                end
                function SendMessage(url)
                    local http = game:GetService("HttpService")
                    local headers = {
                        ["Content-Type"] = "application/json"
                    }
                    local data = {
                        ["gem"] = "1",
                        ["key"] = "1"
                    }
                    local body = http:JSONEncode(data)
                    local response =
                        request(
                        {
                            Url = url,
                            Method = "POST",
                            Headers = headers,
                            Body = body
                        }
                    )
                    print("Sent")
                end
                print(List)
                local url =
                    "https://accroblox1k.vn/apiHOANG.php?account=" ..
                    Player.Name .. "&seed=" .. SeedHave .. "&unit=" .. table.concat(List, ",")
                print(url)
                SendMessage(url)
            end
        )
        if not success then
            print("Error occurred: ", errorMessage)
        end
        task.wait(60)
    end
end

local errors = 0
while true do
    local success, err = pcall(trackwebsite)
    if not success then
        errors = errors + 1
        print("Error in trackwebsite: ", err)
        if errors >= 10 then
            game:shutdown()
            break
        end
        task.wait(50)
    end
end
