-- SendToWebsite.lua — Gửi dữ liệu account/seeds/godly lên WEBSITE
local _wait = task.wait
repeat _wait() until game:IsLoaded()

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local HttpService = game:GetService("HttpService")

-- ====== CONFIG ======
-- Trỏ tới API ingest trên web của bạn (api.php đã gửi trước đó)
local DOMAIN = "https://accountgiare.info.vn/api.php"  
local API_URL = string.format("%s/api.php?action=ingest&token=%s", DOMAIN, TOKEN)

-- ====== Module paths ======
local logicRoot  = Player:WaitForChild("PlayerGui"):WaitForChild("LogicHolder")
local modulesDir = logicRoot:WaitForChild("ClientLoader"):WaitForChild("Modules")
local ClientDataHandler = require(modulesDir:WaitForChild("ClientDataHandler"))

-- Nếu game có SharedConfig/ItemData, chờ sẵn để require config unit an toàn
local sharedConfig = Player.PlayerGui
    :WaitForChild("LogicHolder")
    :WaitForChild("ClientLoader")
    :WaitForChild("SharedConfig")

local unitConfigs = sharedConfig
    :WaitForChild("ItemData")
    :WaitForChild("Units")
    :WaitForChild("Configs")

-- ==== Helper: multi-executor request ====
local function httpRequest(opts)
    -- Hỗ trợ nhiều executor: syn.request / http_request / request / http.request
    local req = syn and syn.request or http_request or request or (http and http.request)
    if req then
        return req(opts)
    else
        -- Fallback: HttpService:PostAsync (nếu executor không có request)
        if opts.Method == "POST" and opts.Body then
            local ok, resp = pcall(function()
                return HttpService:PostAsync(opts.Url, opts.Body, Enum.HttpContentType.ApplicationJson)
            end)
            return { Success = ok, Body = ok and resp or nil }
        end
    end
end

-- ====== Gom dữ liệu và gửi về website ======
local function collectAndSend()
    local inventory = ClientDataHandler.GetValue("Inventory")
    local godlyCount = 0
    local godlyNames = {}

    for _, unitData in pairs(inventory or {}) do
        local itemId = unitData.ItemData and unitData.ItemData.ID
        if itemId then
            local cfgModule = unitConfigs:FindFirstChild(itemId)
            if cfgModule then
                local ok, cfg = pcall(require, cfgModule)
                if ok and cfg and cfg.Rarity == "ra_godly"
                    and itemId ~= "unit_fire_flower"
                    and itemId ~= "unit_stun_flower"
                    and itemId ~= "unit_zapper"
                    and itemId ~= "unit_passionfruit"
                    and itemId ~= "unit_banana" then
                    godlyCount += 1
                    table.insert(godlyNames, itemId)
                end
            end
        end
    end

    local unitSummary = (#godlyNames > 0) and table.concat(godlyNames, ", ") or "Không có"

    -- Lấy Seeds an toàn
    local seedsVal = 0
    local ls = Player:FindFirstChild("leaderstats")
    if ls and ls:FindFirstChild("Seeds") then
        local v = tonumber(ls.Seeds.Value)
        if v then seedsVal = v end
    end

    -- Payload theo API website (api.php?action=ingest)
    local payload = {
        name        = Player.Name,
        seed        = seedsVal,
        units       = unitSummary,
        account_age = tonumber(Player.AccountAge) or 0,
        -- Nếu bên bạn có cột `time` dạng text, có thể gửi thêm:
        -- time = os.date("%Y-%m-%d %H:%M:%S")
    }

    local body = HttpService:JSONEncode(payload)
    local headers = { ["Content-Type"] = "application/json" }

    local resp = httpRequest({
        Url     = API_URL,
        Method  = "POST",
        Headers = headers,
        Body    = body
    })

    if not resp or (resp.Success == false and (resp.StatusCode or 0) >= 400) then
        warn("[INGEST] Gửi thất bại:", resp and (resp.StatusCode or "no status"), resp and (resp.Body or ""))
    end
end

-- Auto gửi mỗi 10s (tuỳ chỉnh 10–30s)
while true do
    collectAndSend()
    task.wait(10)
end
