local SeedWaitRoll = 200000
local CandyWaitRoll = 1800  -- Cần >=1800 Candy Corns cho 20 ub_halloween (2 lần roll x 900)
local _wait = task.wait

repeat _wait() until game:IsLoaded()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local logicRoot = player:WaitForChild("PlayerGui"):WaitForChild("LogicHolder")
local modulesDir = logicRoot:WaitForChild("ClientLoader"):WaitForChild("Modules")
local ClientDataHandler = require(modulesDir:WaitForChild("ClientDataHandler"))
local deleteRemote = ReplicatedStorage:WaitForChild("RemoteFunctions"):WaitForChild("DeleteUnit")

-- Đường dẫn đến Candy Corns display
local candyTitle = player:WaitForChild("PlayerGui"):WaitForChild("GameGui"):WaitForChild("Screen"):WaitForChild("Bottom"):WaitForChild("CurrencyDisplay"):WaitForChild("CandyCornsDisplay"):WaitForChild("Title")

-- Hàm roll Bee (giữ nguyên)
local function Roll()
   local args_lucky = { "ub_tropical", 10 }
   ReplicatedStorage.RemoteFunctions.BuyUnitBox:InvokeServer(unpack(args_lucky))

   local args_lucky = { "ub_tropical", 10 }
   ReplicatedStorage.RemoteFunctions.BuyUnitBox:InvokeServer(unpack(args_lucky))
end

-- Hàm roll Halloween Candy (sửa: roll 2 lần, fix duplicate args)
local function RollCandy()
    print("🎃 Đủ Candy Corns! Đang mua 20 Unit Box Halloween (2 lần)...")
    local args = { "ub_halloween", 10 }
    
    -- Roll lần 1
    local success1, result1 = pcall(function()
        return ReplicatedStorage.RemoteFunctions.BuyUnitBox:InvokeServer(unpack(args))
    end)
    if success1 then
        print("Mua lần 1 thành công! Kết quả:", result1)
    else
        warn("Lỗi lần 1:", result1)
    end
    
    -- Roll lần 2
    local success2, result2 = pcall(function()
        return ReplicatedStorage.RemoteFunctions.BuyUnitBox:InvokeServer(unpack(args))
    end)
    if success2 then
        print("Mua lần 2 thành công! Kết quả:", result2)
    else
        warn("Lỗi lần 2:", result2)
    end
end

local function RemoveUnit()
    local inventory = ClientDataHandler.GetValue("Inventory")
    local toDelete = {}
    local kept = {}
    for uniqueId, unitData in pairs(inventory or {}) do
        local itemId = unitData.ItemData and unitData.ItemData.ID
        local rarity = require(player.PlayerGui.LogicHolder.ClientLoader.SharedConfig.ItemData.Units.Configs:FindFirstChild(itemId))
        if rarity.Rarity == "ra_godly" or unitData.Equipped == true then
            kept[itemId] = true
            continue
        end
        if not kept[itemId] then
            kept[itemId] = true
        else
            table.insert(toDelete, uniqueId)
        end
    end
    if #toDelete > 0 then
        print("🗑️ Deleting", #toDelete, "units...")
        pcall(function() deleteRemote:InvokeServer(toDelete) end)
    else
        print("✅ Không có unit nào cần xoá.")
    end
end

-- Hàm chuẩn hóa số (giữ nguyên, dùng chung cho Seeds và Candy)
local function ParseNumber(str)
    str = tostring(str):gsub(",", "")
    local multipliers = { k = 1e3, m = 1e6, b = 1e9, t = 1e12 }
    local number, suffix = str:lower():match("([%d%.]+)([kmbt]?)")
    return tonumber(number) * (multipliers[suffix] or 1)
end

-- Hàm lấy và parse Candy Corns từ GUI text
local function GetCandyCorns()
    local candyText = candyTitle.Text
    local cleanText = (string.gsub(candyText, "[^0-9%.kmbtKM BT]", ""))  -- Clean text, giữ số + suffix
    return ParseNumber(cleanText)
end

while true do
    -- Check Seeds (giữ nguyên)
    local Seeds = player.leaderstats.Seeds.Value
    local SeedHave = ParseNumber(Seeds)
    if SeedHave >= SeedWaitRoll then
        Roll()                -- Roll đúng 1 lần mỗi loại!
        task.spawn(RemoveUnit)
    end
    
    -- Check Candy Corns
    local CandyHave = GetCandyCorns()
    if CandyHave >= CandyWaitRoll then
        RollCandy()
        task.spawn(RemoveUnit)
    end
    
    _wait(5)
end
